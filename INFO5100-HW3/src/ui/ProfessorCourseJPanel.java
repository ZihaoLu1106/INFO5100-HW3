/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;
import javax.swing.JOptionPane;
import model.Course;
import model.Admin;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import model.Professor;
import model.Student;

/**
 *
 * @author xsyyy
 */
public class ProfessorCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfessorCourseJPanel
     */
    JSplitPane splitPane;
    Admin admin;
    Professor professor;
    public ProfessorCourseJPanel(JSplitPane splitPane,  Admin admin,Professor professor) {
        initComponents();
        this.splitPane=splitPane;
        this.admin = admin;
        this.professor=professor;
        
        populateCurrentCourseTable();
        populateCourseHistoryTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCourse = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfessorCourse = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnAddClass = new javax.swing.JButton();
        btnViewClass = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCourseHistory = new javax.swing.JTable();
        lblCourse1 = new javax.swing.JLabel();

        lblCourse.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblCourse.setText("Course History");

        tblProfessorCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Semester", "Weekday", "Hour", "Capacity", "Current Num"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProfessorCourse);
        if (tblProfessorCourse.getColumnModel().getColumnCount() > 0) {
            tblProfessorCourse.getColumnModel().getColumn(0).setResizable(false);
            tblProfessorCourse.getColumnModel().getColumn(1).setResizable(false);
            tblProfessorCourse.getColumnModel().getColumn(2).setResizable(false);
            tblProfessorCourse.getColumnModel().getColumn(3).setResizable(false);
            tblProfessorCourse.getColumnModel().getColumn(4).setResizable(false);
            tblProfessorCourse.getColumnModel().getColumn(5).setResizable(false);
        }

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAddClass.setText("Add Class");
        btnAddClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClassActionPerformed(evt);
            }
        });

        btnViewClass.setText("View Class");
        btnViewClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewClassActionPerformed(evt);
            }
        });

        tblCourseHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Semester", "Weekday", "Hour"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCourseHistory);
        if (tblCourseHistory.getColumnModel().getColumnCount() > 0) {
            tblCourseHistory.getColumnModel().getColumn(0).setResizable(false);
            tblCourseHistory.getColumnModel().getColumn(1).setResizable(false);
            tblCourseHistory.getColumnModel().getColumn(2).setResizable(false);
            tblCourseHistory.getColumnModel().getColumn(3).setResizable(false);
        }

        lblCourse1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblCourse1.setText("Course Management");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(89, 89, 89)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(110, 110, 110)
                            .addComponent(btnAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(106, 106, 106)
                            .addComponent(btnViewClass, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(66, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCourse1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblCourse1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddClass, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewClass, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(lblCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClassActionPerformed
        // TODO add your handling code here:
        ProfessorAddJPanel professorAddJPanel=new ProfessorAddJPanel(splitPane,admin,professor);
        splitPane.setRightComponent(professorAddJPanel);
    }//GEN-LAST:event_btnAddClassActionPerformed

    private void btnViewClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewClassActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=tblProfessorCourse.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete");
            return;
        }
        DefaultTableModel model=(DefaultTableModel)tblProfessorCourse.getModel();
        Course course=(Course)model.getValueAt(selectedRowIndex,0);
        ProfessorViewJPanel professorViewJPanel=new ProfessorViewJPanel(splitPane,course);
        splitPane.setRightComponent(professorViewJPanel);
    }//GEN-LAST:event_btnViewClassActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:      
         int selectedRow = tblProfessorCourse.getSelectedRow();
         if(selectedRow>=0){
            int dialogButton=JOptionPane.YES_NO_OPTION;
            int diaogResult=JOptionPane.showConfirmDialog(null, "Would you like to delete the account details?","Warning", dialogButton);
            if(diaogResult==JOptionPane.YES_NO_OPTION){
                Course course=(Course)tblProfessorCourse.getValueAt(selectedRow, 0);
                professor.getCourseList().remove(course);
                professor.getCourseHistory().add(course);
                for(Student s:course.getStudentList()){
                    s.getCurrentCourses().remove(course);
                    s.getCourseHistory().add(course);
                    admin.getAllCourse().remove(course);
                }
                populateCurrentCourseTable();      
                populateCourseHistoryTable();      
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddClass;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnViewClass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCourse;
    private javax.swing.JLabel lblCourse1;
    private javax.swing.JTable tblCourseHistory;
    private javax.swing.JTable tblProfessorCourse;
    // End of variables declaration//GEN-END:variables
private void populateCurrentCourseTable() {
        DefaultTableModel model=(DefaultTableModel)tblProfessorCourse.getModel();
        model.setRowCount(0);
        
        for(Course course : professor.getCourseList()){
            Object[]row =new Object[6];
            row[0]=course;
            row[1]=course.getSemester();
            row[2]=course.getWeekdays().toString();
            row[3]=course.getHours();
            row[4]=10;
            row[5]=course.getStudentList().size();
            model.addRow(row);
        }
    }
    private void populateCourseHistoryTable() {
        DefaultTableModel model=(DefaultTableModel)tblCourseHistory.getModel();
        model.setRowCount(0);
        
        for(Course course : professor.getCourseHistory()){
            Object[]row =new Object[7];
            row[0]=course;
            row[1]=course.getProfessorName();
            row[2]=course.getSemester();
            row[3]=course.getWeekdays().toString();
            row[4]=course.getHours();
            row[5]=10;
            
            model.addRow(row);
        }
    }
}
